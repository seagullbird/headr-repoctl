box:
  id: golang:1.9

services:
  - rabbitmq:3.7.2

build:
  steps:
    - wercker/golint:
      exclude: vendor
    - setup-go-workspace:
        package-dir: github.com/seagullbird/headr-repoctl
    - script:
        name: env
        code: env
    - script:
        name: "Setup test environment"
        code: |
          if [ -f "$WERCKER_CACHE_DIR/environ.tar.gz" ]; then
            debug "environ.tar.gz found, unzipping..."
            tar -C / -xzf $WERCKER_CACHE_DIR/environ.tar.gz
          else
            debug "environ.tar.gz not found, creating..."
            mkdir -p /data/sites
            tar -czvf $WERCKER_CACHE_DIR/environ.tar.gz /data
          fi
    - script:
        name: "Wait for RabbitMQ connection"
        code: |
          while ! $(python -c "import socket; soc=socket.socket(); soc.connect(('$RABBITMQ_PORT_5672_TCP_ADDR', $RABBITMQ_PORT_5672_TCP_PORT))"); \
          do sleep 3; done
    - script:
        name: "Test"
        code: |
          ./test.sh
    - script:
        name: "go build"
        code: |
          make build
    - internal/docker-push:
        entrypoint: build/repoctl
        tag: $WERCKER_GIT_COMMIT
        repository: $DOCKERHUB_REPO
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD

deploy-to-kubernetes:
  steps:
    - script:
        name: "Prepare Kubernetes files"
        code: |
          cat k8s/k8s.yaml | \
          gsed -E "s/\{\{(\s*)\.Repository(\s*)\}\}/$(DOCKERHUB_REPO)/g" | \
          gsed -E "s/\{\{(\s*)\.Commit(\s*)\}\}/$(COMMIT)/g" | \
          gsed -E "s/\{\{(\s*)\.Port(\s*)\}\}/8687/g" > tmp.yaml
          mkdir $WERCKER_OUTPUT_DIR/kubernetes
          mv tmp.yml $WERCKER_OUTPUT_DIR/kubernetes
    - kubectl:
        name: "Deploy to Kubernetes"
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        insecure-skip-tls-verify: true
        command: apply -f $WERCKER_OUTPUT_DIR/kubernetes/
